- name: Set up Git user
  hosts: all
  gather_facts: false
  remote_user: root
  tasks:
      - name: Create Git user
        ansible.builtin.user:
            name: git
            shell: /bin/bash
      - name: Give local user and GitHub Actions mirror job SSH access
        changed_when: false
        vars:
            ssh_key: "{{ lookup('file', '../git/mirror.pub') }}"
        ansible.builtin.shell: |
            set -euo pipefail
            mkdir -p ~git/.ssh
            echo "{{ ssh_key }}" | cat ~nicholas/.ssh/authorized_keys - > ~git/.ssh/authorized_keys
            chown git:git ~git/.ssh/authorized_keys
        args:
            executable: /bin/bash

- name: Set up Git and mandarin-duck
  hosts: all
  remote_user: nicholas
  gather_facts: false
  tasks:
      - name: Install dependencies
        become: true
        ansible.builtin.apt:
            name: libgit2-dev
            state: latest
      - name: Ensure Git-related directories exist
        become: true
        ansible.builtin.file:
            path: "{{ item }}"
            owner: git
            group: git
            state: directory
        with_items:
            - /var/www/git/
            - /home/git/.mandarin-duck/
      - name: List existing Git projects
        register: existing_git_projects
        ansible.builtin.shell: find /var/www/git -mindepth 1 -maxdepth 1 -name "*.git" | sed 's;/var/www/git/\(.*\).git;\1;'
        changed_when: false
      - name: Ensure Git projects exist
        when: item not in existing_git_projects.stdout_lines
        remote_user: git
        register: create_git_projects
        ansible.builtin.shell: |
            set -euo pipefail
            cd /var/www/git/
            git clone --bare https://github.com/nchlswhttkr/{{ item }}.git {{ item }}.git
            cd {{ item.name }}.git
            git remote remove origin
            touch git-daemon-export-ok
            echo "Nicholas Whittaker" > owner
            echo "https://nicholas.cloud/git/{{ item }}.git" > url
        args:
            executable: /bin/bash
        loop: "{{ lookup('file', '../git/repos-to-mirror.json') }}"
      - name: Create post-receive hook for all local Git repos
        remote_user: git
        no_log: true
        ansible.builtin.template:
            src: ../git/post-receive.j2.sh
            dest: /var/www/git/{{ item }}.git/hooks/post-receive
            mode: "0755"
        loop: "{{ lookup('file', '../git/repos-to-mirror.json') }}"
      - name: Check mandarin-duck version
        remote_user: git
        register: check_mandarin_duck_version
        ansible.builtin.shell: jq --raw-output '.version' .mandarin-duck/mandarin-duck.cfg
        ignore_errors: true # won't exist on initial install
        changed_when: false
      - name: Sync mandarin-duck config
        remote_user: git
        vars:
            buildkite_api_token: "{{ lookup('community.general.passwordstore', 'website/buildkite-api-token') }}"
        ansible.builtin.template:
            src: ../mandarin-duck.j2.cfg
            dest: /home/git/.mandarin-duck/mandarin-duck.cfg
      - name: Install mandarin-duck
        when: check_mandarin_duck_version.stdout != mandarin_duck_version
        register: install_mandarin_duck
        remote_user: git
        ansible.builtin.shell: |
            set -euo pipefail
            [[ ! -d ~/mandarin-duck ]] && git clone --branch main https://github.com/nchlswhttkr/mandarin-duck.git ~/mandarin-duck
            cd ~/mandarin-duck
            git fetch
            git checkout v{{ mandarin_duck_version }}
            ./install.sh
        args:
            executable: /bin/bash
      - name: Sync checkout of stagit
        register: sync_stagit
        ansible.posix.synchronize:
            src: ../git/stagit/
            dest: /home/nicholas/stagit/
            delete: true
            checksum: true
            times: false
      - name: Sync stagit icon
        register: sync_stagit_icon
        remote_user: git
        ansible.builtin.copy:
            src: ../git/icon.png
            dest: /var/www/git/icon.png
      - name: Build and install stagit
        when: sync_stagit.changed or sync_stagit_icon.changed
        register: install_stagit
        ansible.builtin.shell: |
            set -euo pipefail
            cd ~/stagit
            make
            sudo make install
            make clean
            sudo cp style.css /var/www/git/
            sudo chown git:git /var/www/git/style.css
        args:
            executable: /bin/bash
      - name: Regenerate stagit index and projects
        when: install_stagit.changed or create_git_projects.changed
        remote_user: git
        ansible.builtin.shell: |
            set -euo pipefail
            find /var/www/git -mindepth 1 -maxdepth 1 -name "*.git" | cut -d '/' -f 5 | while read REPO; do
                mkdir -p "/var/www/git/${REPO%%.git}"
                cd "/var/www/git/${REPO%%.git}"
                stagit -u "https://nicholas.cloud/git/${REPO%%.git}/" "/var/www/git/$REPO"
            done
            stagit-index $(find /var/www/git -mindepth 1 -maxdepth 1 -name "*.git") > /var/www/git/index.html
        args:
            executable: /bin/bash
