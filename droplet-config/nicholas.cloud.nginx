server {
    listen 443 ssl http2;
    server_name nicholas.cloud;

    ssl_certificate /home/nicholas/nicholas.cloud.certificate;
    ssl_certificate_key /home/nicholas/nicholas.cloud.key;
    ssl_protocols TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';

    # Cloudflare applies Brotli, this isn't necessary at the moment
    # gzip on;
    # gzip_types text/css text/javascript application/javascript application/json
    # gzip_min_length 1k;

    root /var/www/nicholas.cloud;
    autoindex on;
    error_page 404 /404.html;

    # https://nicholas.cloud/blips/no-floc-for-me-please-google/
    add_header "Permissions-Policy" "interest-cohort=()";

    # WEBSITE
    location / {
        # By default everything stays fresh on proxy for at most 5 mins
        add_header "Cache-Control" "public, max-age=0, s-maxage=300";

        # Cache media on clients for a month
        location ~* \.(gif|jpg|jpeg|png|svg)$ {
            add_header "Cache-Control" "public, max-age=2592000, s-maxage=3600, immutable";
        }

        # Cache styling/javascript on clients for four hours
        location ~* \.(css|js)$ {
            add_header "Cache-Control" "public, max-age=14400, s-maxage=3600";
        }

        # Common aliases for RSS feeds
        location ~* ^/(rss|feed|atom)(/|\.xml)?$ {
            try_files /index.xml =404;
        }
    }

    # FILES
    location /files/ {
        alias /home/nicholas/public-files/;
        add_header "Cache-Control" "public, max-age=0, s-maxage=60";
    }

    # GIT
    location /git/ {
        include /etc/nginx/fastcgi_params;
        fastcgi_param SCRIPT_FILENAME /usr/lib/git-core/git-http-backend;
        fastcgi_param GIT_PROJECT_ROOT /var/www/; # TODO: Don't assume URI
        fastcgi_param PATH_INFO $uri;
        fastcgi_pass unix:/var/run/fcgiwrap.socket;
    }
}

# Enforce HTTPS
server {
    listen 80;
    server_name nicholas.cloud;
    return 301 https://nicholas.cloud$request_uri;
}

# Redirect WWW traffic to root domain
server {
    listen 80;
    listen 443 ssl;

    ssl_certificate /home/nicholas/nicholas.cloud.certificate;
    ssl_certificate_key /home/nicholas/nicholas.cloud.key;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';

    server_name www.nicholas.cloud;
    return 301 https://nicholas.cloud$request_uri;
}

# Plausible
server {
    listen 443 ssl http2;
    server_name plausible.nicholas.cloud;

    ssl_certificate /home/nicholas/nicholas.cloud.certificate;
    ssl_certificate_key /home/nicholas/nicholas.cloud.key;
    ssl_protocols TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';

    location / {
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

}
server {
    listen 80;
    server_name plausible.nicholas.cloud;
    return 301 https://plausible.nicholas.cloud$request_uri;
}

# Writefreely - https://writefreely.org/start
server {
    listen 443 ssl;

    server_name write.nicholas.cloud;

    ssl_certificate /home/nicholas/nicholas.cloud.certificate;
    ssl_certificate_key /home/nicholas/nicholas.cloud.key;
    ssl_protocols TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';

    # Cloudflare applies Brotli, this isn't necessary at the moment
    # gzip on;
    # gzip_types
    #   application/javascript
    #   application/x-javascript
    #   application/json
    #   application/rss+xml
    #   application/xml
    #   image/svg+xml
    #   image/x-icon
    #   application/vnd.ms-fontobject
    #   application/font-sfnt
    #   text/css
    #   text/plain;
    # gzip_min_length 256;
    # gzip_comp_level 5;
    # gzip_http_version 1.1;
    # gzip_vary on;

    location ~ ^/(css|img|js|fonts)/ {
        root /home/nicholas/writefreely/static;
        # Optionally cache these files in the browser:
        # expires 12M;
    }

    location / {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_pass http://127.0.0.1:8080;
        proxy_redirect off;
    }
}
server {
    listen 80;
    server_name write.nicholas.cloud;
    return 301 https://write.nicholas.cloud$request_uri;
}
